/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.eneco.trading.kafka.connect.twitter;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Url extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Url\",\"namespace\":\"com.eneco.trading.kafka.connect.twitter\",\"fields\":[{\"name\":\"display_url\",\"type\":[\"null\",\"string\"]},{\"name\":\"expanded_url\",\"type\":[\"null\",\"string\"]},{\"name\":\"url\",\"type\":[\"null\",\"string\"]}],\"connect.name\":\"com.eneco.trading.kafka.connect.twitter.Url\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence display_url;
  @Deprecated public java.lang.CharSequence expanded_url;
  @Deprecated public java.lang.CharSequence url;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Url() {}

  /**
   * All-args constructor.
   */
  public Url(java.lang.CharSequence display_url, java.lang.CharSequence expanded_url, java.lang.CharSequence url) {
    this.display_url = display_url;
    this.expanded_url = expanded_url;
    this.url = url;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return display_url;
    case 1: return expanded_url;
    case 2: return url;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: display_url = (java.lang.CharSequence)value$; break;
    case 1: expanded_url = (java.lang.CharSequence)value$; break;
    case 2: url = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'display_url' field.
   */
  public java.lang.CharSequence getDisplayUrl() {
    return display_url;
  }

  /**
   * Sets the value of the 'display_url' field.
   * @param value the value to set.
   */
  public void setDisplayUrl(java.lang.CharSequence value) {
    this.display_url = value;
  }

  /**
   * Gets the value of the 'expanded_url' field.
   */
  public java.lang.CharSequence getExpandedUrl() {
    return expanded_url;
  }

  /**
   * Sets the value of the 'expanded_url' field.
   * @param value the value to set.
   */
  public void setExpandedUrl(java.lang.CharSequence value) {
    this.expanded_url = value;
  }

  /**
   * Gets the value of the 'url' field.
   */
  public java.lang.CharSequence getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.CharSequence value) {
    this.url = value;
  }

  /** Creates a new Url RecordBuilder */
  public static com.eneco.trading.kafka.connect.twitter.Url.Builder newBuilder() {
    return new com.eneco.trading.kafka.connect.twitter.Url.Builder();
  }
  
  /** Creates a new Url RecordBuilder by copying an existing Builder */
  public static com.eneco.trading.kafka.connect.twitter.Url.Builder newBuilder(com.eneco.trading.kafka.connect.twitter.Url.Builder other) {
    return new com.eneco.trading.kafka.connect.twitter.Url.Builder(other);
  }
  
  /** Creates a new Url RecordBuilder by copying an existing Url instance */
  public static com.eneco.trading.kafka.connect.twitter.Url.Builder newBuilder(com.eneco.trading.kafka.connect.twitter.Url other) {
    return new com.eneco.trading.kafka.connect.twitter.Url.Builder(other);
  }
  
  /**
   * RecordBuilder for Url instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Url>
    implements org.apache.avro.data.RecordBuilder<Url> {

    private java.lang.CharSequence display_url;
    private java.lang.CharSequence expanded_url;
    private java.lang.CharSequence url;

    /** Creates a new Builder */
    private Builder() {
      super(com.eneco.trading.kafka.connect.twitter.Url.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.eneco.trading.kafka.connect.twitter.Url.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.display_url)) {
        this.display_url = data().deepCopy(fields()[0].schema(), other.display_url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.expanded_url)) {
        this.expanded_url = data().deepCopy(fields()[1].schema(), other.expanded_url);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.url)) {
        this.url = data().deepCopy(fields()[2].schema(), other.url);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Url instance */
    private Builder(com.eneco.trading.kafka.connect.twitter.Url other) {
            super(com.eneco.trading.kafka.connect.twitter.Url.SCHEMA$);
      if (isValidValue(fields()[0], other.display_url)) {
        this.display_url = data().deepCopy(fields()[0].schema(), other.display_url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.expanded_url)) {
        this.expanded_url = data().deepCopy(fields()[1].schema(), other.expanded_url);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.url)) {
        this.url = data().deepCopy(fields()[2].schema(), other.url);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'display_url' field */
    public java.lang.CharSequence getDisplayUrl() {
      return display_url;
    }
    
    /** Sets the value of the 'display_url' field */
    public com.eneco.trading.kafka.connect.twitter.Url.Builder setDisplayUrl(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.display_url = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'display_url' field has been set */
    public boolean hasDisplayUrl() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'display_url' field */
    public com.eneco.trading.kafka.connect.twitter.Url.Builder clearDisplayUrl() {
      display_url = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'expanded_url' field */
    public java.lang.CharSequence getExpandedUrl() {
      return expanded_url;
    }
    
    /** Sets the value of the 'expanded_url' field */
    public com.eneco.trading.kafka.connect.twitter.Url.Builder setExpandedUrl(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.expanded_url = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'expanded_url' field has been set */
    public boolean hasExpandedUrl() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'expanded_url' field */
    public com.eneco.trading.kafka.connect.twitter.Url.Builder clearExpandedUrl() {
      expanded_url = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'url' field */
    public java.lang.CharSequence getUrl() {
      return url;
    }
    
    /** Sets the value of the 'url' field */
    public com.eneco.trading.kafka.connect.twitter.Url.Builder setUrl(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.url = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'url' field has been set */
    public boolean hasUrl() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'url' field */
    public com.eneco.trading.kafka.connect.twitter.Url.Builder clearUrl() {
      url = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Url build() {
      try {
        Url record = new Url();
        record.display_url = fieldSetFlags()[0] ? this.display_url : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.expanded_url = fieldSetFlags()[1] ? this.expanded_url : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.url = fieldSetFlags()[2] ? this.url : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
